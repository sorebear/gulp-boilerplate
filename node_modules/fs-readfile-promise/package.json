{
  "_args": [
    [
      {
        "raw": "fs-readfile-promise@^2.0.1",
        "scope": null,
        "escapedName": "fs-readfile-promise",
        "name": "fs-readfile-promise",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "/Users/sorenbaird/Desktop/LFZ/Udemy/gulp-website/node_modules/gulp-wrap"
    ]
  ],
  "_from": "fs-readfile-promise@>=2.0.1 <3.0.0",
  "_id": "fs-readfile-promise@2.0.1",
  "_inCache": true,
  "_location": "/fs-readfile-promise",
  "_nodeVersion": "2.3.3",
  "_npmUser": {
    "name": "shinnn",
    "email": "snnskwtnb@gmail.com"
  },
  "_npmVersion": "2.12.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fs-readfile-promise@^2.0.1",
    "scope": null,
    "escapedName": "fs-readfile-promise",
    "name": "fs-readfile-promise",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gulp-wrap"
  ],
  "_resolved": "https://registry.npmjs.org/fs-readfile-promise/-/fs-readfile-promise-2.0.1.tgz",
  "_shasum": "80023823981f9ffffe01609e8be668f69ae49e70",
  "_shrinkwrap": null,
  "_spec": "fs-readfile-promise@^2.0.1",
  "_where": "/Users/sorenbaird/Desktop/LFZ/Udemy/gulp-website/node_modules/gulp-wrap",
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "bugs": {
    "url": "https://github.com/shinnn/fs-readfile-promise/issues"
  },
  "dependencies": {
    "graceful-fs": "^4.1.2"
  },
  "description": "Promise version of fs.readFile",
  "devDependencies": {
    "@shinnn/eslintrc-node": "^1.0.2",
    "eslint": "^0.24.0",
    "istanbul": "^0.3.17",
    "istanbul-coveralls": "^1.0.3",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "80023823981f9ffffe01609e8be668f69ae49e70",
    "tarball": "https://registry.npmjs.org/fs-readfile-promise/-/fs-readfile-promise-2.0.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "4036c226774f54833a96a4a9a1c5a82a3a8e8e3f",
  "homepage": "https://github.com/shinnn/fs-readfile-promise#readme",
  "keywords": [
    "fs",
    "read",
    "file",
    "promise",
    "promises",
    "then",
    "thenable"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    }
  ],
  "name": "fs-readfile-promise",
  "optionalDependencies": {},
  "readme": "# fs-readfile-promise \n\n[![NPM version](https://img.shields.io/npm/v/fs-readfile-promise.svg)](https://www.npmjs.com/package/fs-readfile-promise)\n[![Build Status](https://travis-ci.org/shinnn/fs-readfile-promise.svg?branch=master)](https://travis-ci.org/shinnn/fs-readfile-promise)\n[![Build status](https://ci.appveyor.com/api/projects/status/5sacvq0w9x7mwkwd?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/fs-readfile-promise)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/fs-readfile-promise.svg)](https://coveralls.io/r/shinnn/fs-readfile-promise)\n[![Dependency Status](https://img.shields.io/david/shinnn/fs-readfile-promise.svg?label=deps)](https://david-dm.org/shinnn/fs-readfile-promise)\n[![devDependency Status](https://img.shields.io/david/dev/shinnn/fs-readfile-promise.svg?label=devDeps)](https://david-dm.org/shinnn/fs-readfile-promise#info=devDependencies)\n\n[Promises/A+][promise] version of [`fs.readFile`][fs.readfile]\n\n```javascript\nvar readFile = require('fs-readfile-promise');\n\nreadFile('path/to/file')\n.then(buffer => console.log(buffer.toString()))\n.catch(err => console.log(err.message));\n```\n\nBased on the principle of [*modular programming*](https://en.wikipedia.org/wiki/Modular_programming), this module has only one functionality [`readFile`][fs.readfile], unlike other promise-based file system modules. If you want to use a bunch of other [`fs`](http://nodejs.org/api/fs.html) methods in the promises' way, choose other modules such as [q-io](https://github.com/kriskowal/q-io) and [fs-promise](https://github.com/kevinbeaty/fs-promise).\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install fs-readfile-promise\n```\n\n## API\n\n```javascript\nconst readFile = require('fs-readfile-promise');\n```\n\n### readFile(*filename* [, *options*])\n\n*filename*: `String`  \n*options*: `Object` or `String` ([fs.readFile] options)  \nReturn: `Object` ([Promise][promise])\n\nWhen it finish reading the file, it will be [*fulfilled*](https://promisesaplus.com/#point-26) with an [`Buffer`](https://nodejs.org/api/buffer.html#buffer_buffer) of the file as its first argument.\n\nWhen it fails to read the file, it will be [*rejected*](https://promisesaplus.com/#point-30) with an error as its first argument.\n\n```javascript\nconst readFile = require('fs-readfile-promise');\n\nconst onFulfilled = buffer => console.log(buffer.toString());\nconst onRejected = err => console.log('Cannot read the file.');\n\nreadFile('path/to/file').then(onFulfilled, onRejected);\n```\n\n## License\n\nCopyright (c) 2014 - 2015 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n\n[fs.readfile]: https://nodejs.org/api/fs.html#fs_fs_readfile_filename_options_callback\n[promise]: https://promisesaplus.com/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinnn/fs-readfile-promise.git"
  },
  "scripts": {
    "coverage": "node --harmony_arrow_functions node_modules/.bin/istanbul cover test.js",
    "coveralls": "${npm_package_scripts_coverage} && istanbul-coveralls",
    "pretest": "eslint --config node_modules/@shinnn/eslintrc-node/rc.json index.js test.js",
    "test": "node --harmony_arrow_functions test.js"
  },
  "version": "2.0.1"
}
